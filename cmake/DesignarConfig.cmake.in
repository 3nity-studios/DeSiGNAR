set(FIND_DESIGNAR_PATHS
    "${CMAKE_CURRENT_LIST_DIR}/../.."
    ${DESIGNAR_ROOT}
    $ENV{DESIGNAR_ROOT}
    ~/Library/Frameworks
    /Library/Frameworks
    /usr/local
    /usr
    /sw
    /opt/local
    /opt/csw
    /opt)

find_path(DESIGNAR_DOC_DIR Designar.tag
          PATH_SUFFIXES Designar/doc share/doc/Designar
          PATHS ${FIND_DESIGNAR_PATHS})

# choose which target definitions must be imported
if (DESIGNAR_STATIC_LIBRARIES)
    set(config_name "Static")
else()
    set(config_name "Shared")
endif()
set(targets_config_file "${CMAKE_CURRENT_LIST_DIR}/Designar${config_name}Targets.cmake")

# generate imported targets for DeSiGNAR and its dependencies
if (EXISTS "${targets_config_file}")
    # Set DESIGNAR_FOUND to TRUE by default, may be overwritten by one of the includes below
    set(DESIGNAR_FOUND TRUE)
    include("${targets_config_file}")
else()
    set(FIND_DESIGNAR_ERROR "Requested DeSiGNAR configuration (${config_name}) was not found")
    set(DESIGNAR_FOUND FALSE)
endif()

if (NOT DESIGNAR_FOUND)
    if(DESIGNAR_FIND_REQUIRED)
        # fatal error
        message(FATAL_ERROR "${FIND_DESIGNAR_ERROR}")
    elseif(NOT DESIGNAR_FIND_QUIETLY)
        # error but continue
        message(STATUS "${FIND_DESIGNAR_ERROR}")
    endif()
endif()

if (DESIGNAR_FOUND AND NOT DESIGNAR_FIND_QUIETLY)
    message(STATUS "Found DeSiGNAR @VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_PATCH@ in ${CMAKE_CURRENT_LIST_DIR}")
endif()
